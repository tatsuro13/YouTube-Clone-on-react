{"version":3,"sources":["components/Header/Header.module.scss","components/Layout/Layout.module.scss","components/VideoPlay/VideoPlay.module.scss","components/SideListItem/SideListItem.module.scss","components/VideoGrid/VideoGrid.module.scss","components/VideoGridItem/VideoGridItem.module.scss","components/VideoDetail/VideoDetail.module.scss","components/SideList/SideList.module.scss","store/index.js","components/Header/Header.js","components/Layout/Layout.js","apis/index.js","components/VideoGrid/VideoGrid.js","components/VideoGridItem/VideoGridItem.js","pages/Top.js","pages/Search.js","components/VideoPlay/VideoPlay.js","components/VideoDetail/VideoDetail.js","components/SideListItem/SideListItem.js","components/SideList/SideList.js","pages/Watch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","popular","related","searched","selected","term","reducer","state","action","type","payload","Store","createContext","globalState","setGlobalState","StoreProvider","children","useReducer","Provider","value","Header","useState","setTerm","history","useHistory","useContext","useEffect","className","Style","header","item","to","onSubmit","e","preventDefault","push","placeholder","onChange","target","icon","faSearch","Layout","wrapper","main","youtube","axios","create","baseURL","params","part","maxResults","key","regionCode","fetchPopularData","a","get","chart","fetchSelectedData","id","fetchRelatedData","relatedVideoId","fetchSearchData","query","q","VideoGrid","container","VideoGridItem","src","title","pathname","search","alt","Top","then","res","console","log","data","items","map","snippet","thumbnails","standard","url","Search","location","useLocation","serSearchResult","searchParams","URLSearchParams","videoId","medium","VideoPlay","wrap","video","VideoDetail","description","SideListItem","info","SideList","sidenav","Watch","setVideos","Promise","all","shift","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f054a01e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"item\":\"Header_item__2VaIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__2dOTA\",\"main\":\"Layout_main__3OBIG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"VideoPlay_wrap__21ucX\",\"video\":\"VideoPlay_video__2ekpd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SideListItem_item__b9PvY\",\"info\":\"SideListItem_info__1xDCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"VideoGrid_container__1eUpe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"VideoGridItem_item__2P63g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"VideoDetail_wrap__2Cb5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidenav\":\"SideList_sidenav__j1iTt\"};","import React, { createContext, useReducer } from 'react';\n\nconst initialState = {\n  popular: [],\n  related: [],\n  searched: [],\n  selected: {},\n  term: '',\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_POPULAR':\n      return { ...state, popular: action.payload.popular };\n    case 'SET_RELATED':\n      return { ...state, related: action.payload.related };\n    case 'SET_SEARCHED':\n      return { ...state, searched: action.payload.searched };\n    case 'SET_SELECTED':\n      return { ...state, selected: action.payload.selected };\n    case 'SET_TERM':\n      return { ...state, term: action.payload.term };\n    default:\n      return state;\n  }\n};\n\nexport const Store = createContext({\n  globalState: initialState,\n  setGlobalState: () => null,\n});\n\nexport const StoreProvider = ({ children }) => {\n  const [globalState, setGlobalState] = useReducer(reducer, initialState);\n  return (\n    <Store.Provider value={{ globalState, setGlobalState }}>\n      {children}\n    </Store.Provider>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport Style from './Header.module.scss';\nimport { useHistory } from 'react-router-dom';\nimport { Store } from '../../store';\n\nconst Header = () => {\n  const [term, setTerm] = useState('');\n  const history = useHistory();\n  const { globalState, setGlobalState } = useContext(Store);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setGlobalState({ type: 'SET_TERM', payload: { term } });\n    history.push(`/search?query=${term}`);\n  };\n  useEffect(() => {\n    setTerm(globalState.term);\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <div className={Style.header}>\n      <div className={Style.item}>\n        <Link to=\"/\">YoutubeClone on React</Link>\n      </div>\n      <div className={Style.item}>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"検索\"\n            onChange={(e) => setTerm(e.target.value)}\n            value={term}\n          />\n          <button type=\"submit\">\n            <FontAwesomeIcon icon={faSearch} />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react'\nimport Header from \"../Header/Header\"\nimport Style from \"./Layout.module.scss\"\nconst Layout = ({ children }) => {\n  return (\n    <div className={Style.wrapper}>\n      <div className={Style.main}>\n        <Header />\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","import axios from 'axios';\n\nconst KEY = 'AIzaSyBI7TOL67tQ6AlW2K4FKYUiRS5f9cpTdjM';\n\nconst youtube = axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3/',\n});\n\nconst params = {\n  part: 'snippet',\n  maxResults: 40,\n  key: KEY,\n  regionCode: 'JP',\n  type: 'video',\n};\n\nexport const fetchPopularData = async () => {\n  return await youtube.get('/videos', {\n    params: {\n      ...params,\n      chart: 'mostpopular',\n    },\n  });\n};\n\nexport const fetchSelectedData = async (id) => {\n  return await youtube.get('/videos', {\n    params: {\n      ...params,\n      id,\n    },\n  });\n};\n\nexport const fetchRelatedData = async (id) => {\n  return await youtube.get('/search', {\n    params: {\n      ...params,\n      relatedVideoId: id,\n    },\n  });\n};\n\nexport const fetchSearchData = async (query) => {\n  return await youtube.get('/search', {\n    params: {\n      ...params,\n      q: query,\n    },\n  });\n};\n","import React from 'react'\nimport Style from './VideoGrid.module.scss'\n\nconst VideoGrid = ({ children }) => {\n  return (\n    <div className={Style.container}>\n      {children}\n    </div>\n  )\n}\n\nexport default VideoGrid\n","import React from 'react'\nimport Style from './VideoGridItem.module.scss'\nimport { Link } from 'react-router-dom'\n\nconst VideoGridItem = ({ id, src, title }) => {\n  return (\n    <Link to={{ pathname: 'watch', search: `?v=${id}` }} className={Style.item}>\n      <div>\n        <img src={src} alt={title} />\n        <span>{title}</span>\n      </div>\n    </Link>\n  )\n}\nexport default VideoGridItem\n","import React, { useEffect, useContext } from 'react';\nimport Layout from '../components/Layout/Layout';\nimport { fetchPopularData } from '../apis/index';\nimport { Store } from '../store/index';\nimport VideoGrid from '../components/VideoGrid/VideoGrid';\nimport VideoGridItem from '../components/VideoGridItem/VideoGridItem';\n\nconst Top = () => {\n  const { globalState, setGlobalState } = useContext(Store);\n\n  useEffect(() => {\n    fetchPopularData().then((res) => {\n      console.log('data', res);\n      setGlobalState({\n        type: 'SET_POPULAR',\n        payload: { popular: res.data.items },\n      });\n    });\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <Layout>\n      <VideoGrid>\n        {globalState.popular &&\n          globalState.popular.map((popular) => {\n            return (\n              <VideoGridItem\n                id={popular.id}\n                key={popular.id}\n                src={popular.snippet.thumbnails.standard.url}\n                title={popular.snippet.title}\n              />\n            );\n          })}\n      </VideoGrid>\n    </Layout>\n  );\n};\n\nexport default Top;\n","import React, { useEffect, useContext } from 'react';\nimport Layout from '../components/Layout/Layout';\nimport { useLocation } from 'react-router-dom';\nimport { fetchSearchData } from '../apis';\nimport { Store } from '../store';\nimport VideoGrid from '../components/VideoGrid/VideoGrid';\nimport VideoGridItem from '../components/VideoGridItem/VideoGridItem';\n\nconst Search = () => {\n  const { globalState, setGlobalState } = useContext(Store);\n  const location = useLocation();\n  const serSearchResult = async () => {\n    const searchParams = new URLSearchParams(location.search);\n    const query = searchParams.get('query');\n    // console.log(query);\n    if (query) {\n      await fetchSearchData(query).then((res) => {\n        setGlobalState({\n          type: 'SET_SEARCHED',\n          payload: { searched: res.data.items },\n        });\n      });\n    }\n  };\n  useEffect(() => {\n    serSearchResult();\n    // eslint-disable-next-line\n  }, [location.search]);\n  return (\n    <Layout>\n      <VideoGrid>\n        {globalState.searched ? (\n          globalState.searched.map((search) => {\n            return (\n              <VideoGridItem\n                id={search.id.videoId}\n                key={search.id.videoId}\n                src={search.snippet.thumbnails.medium.url}\n                title={search.snippet.title}\n              />\n            );\n          })\n        ) : (\n          <span>no data</span>\n        )}\n      </VideoGrid>\n    </Layout>\n  );\n};\n\nexport default Search;\n","import React from 'react'\nimport Youtube from 'react-youtube'\nimport Style from './VideoPlay.module.scss'\n\nconst VideoPlay = ({ id }) => {\n  return (\n    <div className={Style.wrap}>\n      <Youtube videoId={id} className={Style.video} />\n    </div>\n  )\n}\n\nexport default VideoPlay\n","import React, { useContext } from 'react';\nimport { Store } from '../../store';\nimport VideoPlay from '../VideoPlay/VideoPlay';\nimport Style from './VideoDetail.module.scss';\nimport Linkify from 'react-linkify';\n\nconst VideoDetail = () => {\n  const { globalState } = useContext(Store);\n  return globalState.selected && globalState.selected.id ? (\n    <div className={Style.wrap}>\n      <VideoPlay id={globalState.selected.id} />\n      <p>{globalState.selected.snippet.title}</p>\n      <hr />\n      <Linkify>\n        <pre>{globalState.selected.snippet.description}</pre>\n      </Linkify>\n    </div>\n  ) : (\n    <span>no data</span>\n  );\n};\n\nexport default VideoDetail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Style from './SideListItem.module.scss';\n\nconst SideListItem = ({ id, src, title }) => {\n  return (\n    <Link className={Style.item} to={{ pathname: 'watch', search: `?v=${id}` }}>\n      <img src={src} alt={title} />\n      <div className={Style.info}>\n        <span>{title}</span>\n      </div>\n    </Link>\n  );\n};\n\nexport default SideListItem;\n","import React, { useContext } from 'react';\nimport { Store } from '../../store/index';\nimport SideListItem from '../SideListItem/SideListItem';\nimport Style from './SideList.module.scss';\n\nconst SideList = () => {\n  const { globalState } = useContext(Store);\n  return (\n    <div className={Style.sidenav}>\n      {globalState.related ? (\n        globalState.related.map((video) => {\n          return (\n            <SideListItem\n              id={video.id.videoId}\n              key={video.id.videoId}\n              src={video.snippet.thumbnails.medium.url}\n              title={video.snippet.title}\n            />\n          );\n        })\n      ) : (\n        <span>no data</span>\n      )}\n    </div>\n  );\n};\n\nexport default SideList;\n","import React, { useContext, useEffect } from 'react';\nimport Layout from '../components/Layout/Layout';\nimport VideoDetail from '../components/VideoDetail/VideoDetail';\nimport SideList from '../components/SideList/SideList';\nimport { Store } from '../store/index';\nimport { useLocation } from 'react-router-dom';\nimport { fetchSelectedData, fetchRelatedData } from '../apis';\n\nconst Watch = () => {\n  // eslint-disable-next-line\n  const { setGlobalState } = useContext(Store);\n  const location = useLocation();\n  const setVideos = async () => {\n    const searchParams = new URLSearchParams(location.search);\n    const id = searchParams.get('v');\n    if (id) {\n      const [selected, related] = await Promise.all([\n        fetchSelectedData(id),\n        fetchRelatedData(id),\n      ]);\n      // console.log('result', result);\n      setGlobalState({\n        type: 'SET_SELECTED',\n        payload: { selected: selected.data.items.shift() },\n      });\n      setGlobalState({\n        type: 'SET_RELATED',\n        payload: { related: related.data.items },\n      });\n    }\n  };\n  useEffect(() => {\n    setVideos();\n    // eslint-disable-next-line\n  }, [location.search]);\n  return (\n    <Layout>\n      <VideoDetail />\n      <SideList />\n    </Layout>\n  );\n};\n\nexport default Watch;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Top from \"./pages/Top\";\nimport Search from \"./pages/Search\";\nimport Watch from \"./pages/Watch\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route exact path=\"/search\" component={Search} />\n        <Route exact path=\"/watch\" component={Watch} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './store/index'\nimport 'normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}